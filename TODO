if Makefile.am has "SOURCE =...", must omit it from output somehow.
(This should probably just be invalid.  Should use extra_SOURCE or something)

consider rules to re-make Makefile.in from Makefile.am

must look at mkid to see how it works (for subdir usage)

must fix install-info rule in texinfos.am

better error checking.  For instance this should cause an error:

	LIBRARIES = zardoz
	foo_SOURCES = ...

clean.am: clean: if all the macros are empty, the rule expands to:
	rm -rf
which should be fixed

================================================================

For CONFIG_HEADER,
  generate automatic dependencies for the object files.
  automatically add its input file to the distribution.

Deal with optional object files and programs (@foo@) better.
	[Presently this is handled using ALLPROGRAMS, decidedly hacky]
Ditto for programs that are scripts.
Right now it's just kludgy workarounds.

Don't hardcode the name of the configuration header.  Get it from
configure.in (AC_CONFIG_HEADER).  

Get the list of Makefiles to create from configure.in AC_OUTPUT
if none are given.

Should libexec programs have the name transform done on them?
	[No]

Order the output rules sensibly, so FOO_SOURCES and FOO_OBJECTS are
together and rules are in the usual order.

Make the output minimal: only output definitions for variables that
are used.

Rewrite in Perl.  Look at dist's jmake for ideas.

Should handle directory hierarchies deeper than 2.  Right now there is
no support for this at all.

================================================================

Document:

DIST_SUBDIRS are directories which are copied verbatim into the
distribution.  Used eg for directories holding only example code
(which don't have their own makefile).  This might be a bad idea.
