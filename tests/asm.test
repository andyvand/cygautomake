#! /bin/sh

# Test of basic assembly functionality

. $srcdir/defs || exit 1

set -e

cat > Makefile.am << 'END'
noinst_PROGRAMS = maude
maude_SOURCES = maude.s
END

: > maude.s

# Should fail because we need CC and CCAS.
echo 1
cat > configure.in << 'END'
AC_INIT
AM_INIT_AUTOMAKE(nonesuch, nonesuch)
AC_SUBST(CCASFLAGS)
AC_OUTPUT(Makefile)
END

$ACLOCAL
$AUTOMAKE 2>stderr && exit 1
cat stderr
grep AM_PROG_AS stderr

# On fast machines the autom4te.cache created during the above run of
# $AUTOMAKE is likely to have the same time stamp as the configure.in
# created below; thus causing traces for the old configure.in to be
# used.  We could do `sleep 2', but it's faster to erase the
# directory.  (Erase autom4te*.cache, not autom4te.cache, because some
# bogus installations of Autoconf use a versioned cache.)
rm -rf autom4te*.cache

# We still need CCAS.
echo 2
cat > configure.in << 'END'
AC_INIT
AM_INIT_AUTOMAKE(nonesuch, nonesuch)
AC_PROG_CC
AC_SUBST(CCASFLAGS)
AC_OUTPUT(Makefile)
END

$ACLOCAL
$AUTOMAKE 2>stderr && exit 1
cat stderr
grep CCAS stderr
grep AM_PROG_AS stderr

rm -rf autom4te*.cache

# We need CCASFLAGS.
echo 3
cat > configure.in << 'END'
AC_INIT
AM_INIT_AUTOMAKE(nonesuch, nonesuch)
CCAS='$(CC)'
AC_SUBST(CCAS)
AC_PROG_CC
AC_OUTPUT(Makefile)
END

$ACLOCAL
$AUTOMAKE 2>stderr && exit 1
cat stderr
grep CCASFLAGS stderr
grep AM_PROG_AS stderr

rm -rf autom4te*.cache

# We have every needed, expect a success.
echo 4
cat > configure.in << 'END'
AC_INIT
AM_INIT_AUTOMAKE(nonesuch, nonesuch)
CCAS='$(CC)'
AC_SUBST(CCAS)
AC_PROG_CC
AC_SUBST(CCASFLAGS)
AC_OUTPUT(Makefile)
END

$ACLOCAL
$AUTOMAKE

rm -rf autom4te*.cache

# We have every needed, expect a success.
echo 5
cat > configure.in << 'END'
AC_INIT
AM_INIT_AUTOMAKE(nonesuch, nonesuch)
AM_PROG_AS
AC_OUTPUT(Makefile)
END

$ACLOCAL
$AUTOMAKE

exit 0
