#! /bin/sh

# Test to ensure std-options checking is correct.

required=gcc
. $srcdir/defs || exit 1

cat >> configure.in << 'END'
AC_PROG_CC
AC_OUTPUT
END

cat > Makefile.am << 'END'
AUTOMAKE_OPTIONS = gnits
noinst_PROGRAMS = fubar2
bin_PROGRAMS = fubar sub/fine
nobase_bin_PROGRAMS = sub/fubar3
fubar_SOURCES = fubar.c
fubar2_SOURCES = fubar.c
sub_fubar3_SOURCES = fubar.c
sub_fine_SOURCES = fine.c
bin_SCRIPTS = sub/scriptok.sh sub/scriptnok.sh
END

echo 'int main () { return 0; }' > fubar.c

cat > fine.c << 'END'
#include <stdio.h>
int
main ()
{
  puts ("Which version? Which usage?");
  return 0;
}
END

mkdir sub

cat >sub/scriptok.sh <<EOF
#!/bin/sh
echo "Which version? Which usage?"
EOF

cat >sub/scriptnok.sh <<EOF
#!/bin/sh
:
EOF

chmod +x sub/scriptok.sh
chmod +x sub/scriptnok.sh

# Files required by Gnits.
: > INSTALL
: > NEWS
: > README
: > COPYING
: > AUTHORS
: > ChangeLog
: > THANKS

set -e

$ACLOCAL
$AUTOCONF
$AUTOMAKE -a

mkdir build
cd build

# Use --program-prefix to make sure the std-options check honors it.
../configure --prefix=`pwd`/../inst-dir --program-prefix=p
$MAKE all
$MAKE install
test -f ../inst-dir/bin/pfine
test ! -f ../inst-dir/bin/fine
$MAKE -k installcheck 2>stderr && exit 1
cat stderr
grep 'pfubar does not support' stderr
grep 'pfubar3 does not support' stderr
grep 'pscriptnok.sh does not support' stderr
# Only three failures please.
test `grep 'does not support --help' stderr | wc -l` = 3
test `grep 'does not support --version' stderr | wc -l` = 3
