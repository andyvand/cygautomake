#! /bin/sh
# Copyright (C) 2001, 2002, 2003  Free Software Foundation, Inc.
#
# This file is part of GNU Automake.
#
# GNU Automake is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# GNU Automake is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with autoconf; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.

# Test to make sure Automake supports implicit rules "confusing"
# extensions.  Inspired by a mail from Alex Hornby.

required=gcc
. ./defs || exit 1

set -e

cat >> configure.in << 'END'
AC_PROG_CXX
AC_OUTPUT
END

cat > Makefile.am << 'END'
SUFFIXES = .idl S.cpp C.h
SUFFIXES += C.cpp S.h
.idlC.cpp:
	cp $< $@

bin_PROGRAMS = foo
foo_SOURCES = foo.idl

echo:
	@echo 'BEG: $(foo_OBJECTS) :END'
END

: > fooa

$ACLOCAL
$AUTOCONF
$AUTOMAKE
./configure
OBJEXT=bar $MAKE -e echo >stdout
cat stdout
grep 'BEG: foo.bar :END' stdout

# Make sure Automake has NOT recognized .cpp and .idlC as two new
# extensions.
grep 'SUFFIXES.* \.cpp' Makefile.in && exit 1
grep 'SUFFIXES.* \.idlC' Makefile.in && exit 1

exit 0
