#! /bin/sh

# The for conditional SUBDIRS.
# SUBDIRS + AM_CONDITIONAL setup from the manual.
# Lots of lines here are duplicated in subdircond3.test.

. $srcdir/defs || exit 1

set -e

cat >>configure.in <<'END'
AM_CONDITIONAL([COND_OPT], [test "$want_opt" = yes])
AC_CONFIG_FILES([src/Makefile opt/Makefile])
AC_OUTPUT
END

cat >Makefile.am << 'END'
if COND_OPT
  MAYBE_OPT = opt
endif
SUBDIRS = src $(MAYBE_OPT)

# Testing targets.
#
# We want to ensure that
#      - src/source and opt/source are always distributed.
#      - src/result is always built
#      - opt/result is built conditionally
#
# We rely on `distcheck' to run `check-local' and use
# `sanity1' and `sanity2' as evidences that test-build was run.

if COND_OPT
test-build: all
	test -f src/result
	test -f opt/result
	: > $(top_builddir)/../../sanity2
else
test-build: all
	test -f src/result
	test ! -f opt/result
	: > $(top_builddir)/../../sanity1
endif

test-dist: distdir
	test -f $(distdir)/src/source
	test -f $(distdir)/opt/source

check-local: test-build test-dist
END

mkdir src opt
: > src/source
: > opt/source

cat >src/Makefile.am << 'END'
EXTRA_DIST = source
all-local: result
CLEANFILES = result

result: source
	cp $(srcdir)/source result
END

# We want in opt/ the same Makefile as in src/.  Let's exercize `include'.
cat >opt/Makefile.am << 'END'
include ../src/Makefile.am
END

$ACLOCAL
$AUTOCONF
$AUTOMAKE --add-missing
./configure
$MAKE distcheck
test -f sanity1
$MAKE DISTCHECK_CONFIGURE_FLAGS=want_opt=yes distcheck
test -f sanity2
