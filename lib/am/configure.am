## automake - create Makefile.in from Makefile.am
## Copyright (C) 2001, 2002, 2003
## Free Software Foundation, Inc.

## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2, or (at your option)
## any later version.

## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
## 02111-1307, USA.

## --------------------- ##
## Building Makefile.*.  ##
## --------------------- ##

## This rule remakes the Makefile.in.
%MAKEFILE-IN%: %MAINTAINER-MODE% %MAKEFILE-AM% %MAKEFILE-IN-DEPS% $(top_srcdir)/%CONFIGURE-AC% $(ACLOCAL_M4) %CONFIGURE_DEPS%
## If configure.ac or one of configure's dependencies has changed, all
## Makefile.in are to be updated; it is then more efficient to run
## automake on all the Makefiles at once.  It also allow Automake to be
## run for newly added directories.
	@for dep in $?; do \
	  case '$(top_srcdir)/%CONFIGURE-AC% $(ACLOCAL_M4) %CONFIGURE_DEPS%' in \
	    *$$dep*) \
	      echo ' cd $(top_srcdir) && $(AUTOMAKE) --%STRICTNESS% %USE-DEPS%'; \
	      cd $(top_srcdir) && $(AUTOMAKE) --%STRICTNESS% %USE-DEPS%; \
	      exit 0;; \
	  esac; \
	done; \
## Otherwise, rebuild only this file.
        echo ' cd $(top_srcdir) && $(AUTOMAKE) --%STRICTNESS% %USE-DEPS% %MAKEFILE-AM-SOURCES%'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --%STRICTNESS% %USE-DEPS% %MAKEFILE-AM-SOURCES%

## This rule remakes the Makefile.
%MAKEFILE%: %MAINTAINER-MODE% %MAKEFILE-IN% %MAKEFILE-DEPS% $(top_builddir)/config.status
## If Makefile is to be updated because of config.status, then run
## config.status without argument in order to (i) rerun all the
## AC_CONFIG_COMMANDS including those that are not visible to
## Automake, and (ii) to save time by running config.status all with
## all the files, instead of once per file (iii) generate Makefiles
## in newly added directories.
	@case '$?' in \
## Don't prefix $(top_builddir), because GNU make will strip it out
## when it's `.'.
	  *config.status*) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status'; \
	    cd $(top_builddir) && $(SHELL) ./config.status;; \
	  *) \
## FIXME: $(am__depfiles_maybe) lets us re-run the rule to create the
## .P files.  Ideally we wouldn't have to do this by hand.
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status %CONFIG-MAKEFILE% $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status %CONFIG-MAKEFILE% $(am__depfiles_maybe);; \
	esac;

## --------------------------- ##
## config.status & configure.  ##
## --------------------------- ##

if %?TOPDIR_P%
## Always require configure.ac and configure at top level, even if they
## don't exist.  This is especially important for configure, since it
## won't be created until autoconf is run -- which might be after
## automake is run.
DIST_COMMON += configure %CONFIGURE-AC%
endif %?TOPDIR_P%

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(SHELL) ./config.status --recheck

$(top_srcdir)/configure: %MAINTAINER-MODE% $(top_srcdir)/%CONFIGURE-AC% $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES) %CONFIGURE_DEPS%
	cd $(top_srcdir) && $(AUTOCONF)


## ------------ ##
## aclocal.m4.  ##
## ------------ ##

## aclocal.m4 must be built by the top-level Makefile, because this is
## where the user is expected to define $(ACLOCAL_AMFLAGS).
if %?REGEN-ACLOCAL-M4%
$(ACLOCAL_M4): %MAINTAINER-MODE% $(top_srcdir)/%CONFIGURE-AC% %ACLOCAL_M4_DEPS%
?TOPDIR_P?	$(ACLOCAL) $(ACLOCAL_AMFLAGS)
?!TOPDIR_P?	cd $(top_srcdir) && $(MAKE) $(AM_MAKEFLAGS) '$$(ACLOCAL_M4)'
endif %?REGEN-ACLOCAL-M4%


## --------- ##
## cleanup.  ##
## --------- ##


## We special-case config.status here.  If we do it as part of the
## normal clean processing for this directory, then it might be
## removed before some subdir is cleaned.  However, that subdir's
## Makefile depends on config.status.

if %?TOPDIR_P%
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno
distclean:
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)

## Note: you might think we should remove Makefile.in, configure, or
## aclocal.m4 here in a maintainer-clean rule.  However, the GNU
## Coding Standards explicitly prohibit this.

maintainer-clean:
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
## autom4te.cache is created by Autoconf; the only valid target to
## remove it is maintainer-clean, not distclean.
## If you have an autom4te.cache that cause distcheck to fail, then
## it is good news: you finally discovered that autoconf and/or
## autoheader is needed to use your tarball, which is wrong.
	-rm -rf autom4te.cache


endif %?TOPDIR_P%
