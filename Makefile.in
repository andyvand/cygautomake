# Makefile.in generated automatically by automake 0.29 from Makefile.am

# Copyright (C) 1994, 1995, 1996 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy, distribute and modify it.


SHELL = /bin/sh

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include

pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@

top_builddir = .

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
transform = @program_transform_name@

AUTOMAKE_OPTIONS = gnits

bin_SCRIPTS = automake
info_TEXINFOS = automake.texi
# SUBDIRS = intl po
# CONFIG_HEADER = config.h

pkgdata_DATA = clean-kr.am clean.am compile-kr.am compile-vars.am \
compile.am data.am depend.am \
dist-vars.am footer.am header.am header-vars.am \
kr-vars.am libraries-vars.am \
libraries.am library.am mans-vars.am \
program.am programs.am remake-hdr.am \
remake-subd.am remake.am scripts.am subdirs.am tags.am tags-subd.am \
tags-clean.am \
texi-version.am texinfos-vars.am texinfos.am \
libraries-clean.am scripts-clean.am programs-clean.am data-clean.am \
COPYING INSTALL install-sh mdate-sh mkinstalldirs texinfo.tex \
config.guess config.sub

DIST_OTHER = automake.in

# Gross.
DIST_SUBDIRS = samples/cpio/*Makefile.am

# The following requires a fixed version of the Emacs 19.30 etags.
ETAGS_ARGS = automake.in --lang=none \
 --regex='/^@node[ \t]+\([^,]+\)/\1/' automake.texi
ACLOCAL = aclocal.m4
SCRIPTS = $(bin_SCRIPTS)


MAKEINFO = makeinfo
TEXI2DVI = texi2dvi
INFOS = automake.info*
INFO_DEPS = automake.info
DVIS = automake.dvi
TEXINFOS = automake.texi

DATA = $(pkgdata_DATA)

DIST_COMMON = README AUTHORS COPYING ChangeLog INSTALL Makefile.am \
Makefile.in NEWS README THANKS TODO aclocal.m4 config.guess config.sub \
configure configure.in install-sh mdate-sh mkinstalldirs stamp-vti \
texinfo.tex version.texi


PACKAGE = @PACKAGE@
VERSION = @VERSION@

DISTFILES = $(DIST_COMMON) $(SOURCES) $(BUILT_SOURCES) $(HEADERS) \
	$(TEXINFOS) $(INFOS) $(MANS) $(DIST_OTHER) $(DATA)
DEP_DISTFILES = $(DIST_COMMON) $(SOURCES) $(BUILT_SOURCES) $(HEADERS) \
	$(TEXINFOS) $(INFO_DEPS) $(MANS) $(DIST_OTHER) $(DATA)
default: all


$(srcdir)/Makefile.in: Makefile.am
	cd $(srcdir) && automake Makefile

# For an explanation of the following Makefile rules, see node
# `Automatic Remaking' in GNU Autoconf documentation.
Makefile: Makefile.in config.status
	CONFIG_FILES=$@ CONFIG_HEADERS= ./config.status
config.status: configure
	./config.status --recheck
$(srcdir)/configure: configure.in $(ACLOCAL)
	cd $(srcdir) && autoconf

mostlyclean-binSCRIPTS:

clean-binSCRIPTS:
	rm -f $(bin_SCRIPTS)

distclean-binSCRIPTS:

maintainer-clean-binSCRIPTS:

install-binSCRIPTS: $(bin_SCRIPTS)
	$(top_srcdir)/mkinstalldirs $(bindir)
	for p in $(bin_SCRIPTS); do		\
	  if test -f $$p; then			\
	    $(INSTALL_SCRIPT) $$p $(bindir)/`echo $$p|sed '$(transform)'`; \
	  else :; fi;				\
	done

uninstall-binSCRIPTS:
	for p in $(bin_SCRIPTS); do		\
	  rm -f $(bindir)/`echo $$p|sed '$(transform)'`; \
	done

version.texi: stamp-vti

stamp-vti: automake.texi $(top_srcdir)/configure.in
	echo "@set UPDATED `cd $(srcdir) && $(SHELL) mdate-sh automake.texi`" \
	  > vti.tmp
	echo "@set EDITION $(VERSION)" >> vti.tmp
	echo "@set VERSION $(VERSION)" >> vti.tmp
	if cmp -s vti.tmp $(srcdir)/version.texi; then \
	  rm vti.tmp;			\
	else					\
	  mv vti.tmp $(srcdir)/version.texi; \
	fi
	echo timestamp > $(srcdir)/stamp-vti

mostlyclean-vti:
	rm -f vti.tmp

clean-vti:

distclean-vti:

maintainer-clean-vti:
	rm -f stamp-vti version.texi

automake.info: automake.texi


.texi.info:
	$(MAKEINFO) -I$(srcdir) $<

.texi.dvi:
	TEXINPUTS=$(srcdir):$$TEXINPUTS $(TEXI2DVI) $<

install-info: $(INFO_DEPS)
	$(top_srcdir)/mkinstalldirs $(infodir)
	for file in $(INFO_DEPS); do		\
	  for ifile in `cd $(srcdir) && echo $$file*`; do \
	    $(INSTALL_DATA) $(srcdir)/$$ifile $(infodir)/$$ifile; \
	  done;					\
	done

uninstall-info:
	cd $(srcdir) && for file in *.info*; do	\
	  rm -f $(infodir)/$$file; \
	done

mostlyclean-info:
	rm -f automake.aux automake.cp automake.cps automake.dvi automake.fn \
	  automake.fns automake.ky automake.log automake.pg automake.toc \
	  automake.tp automake.vr automake.op

clean-info:

distclean-info:

maintainer-clean-info:
	rm -f $(INFOS)

install-pkgdataDATA: $(pkgdata_DATA)
	$(top_srcdir)/mkinstalldirs $(pkgdatadir)
	for p in $(pkgdata_DATA); do		\
	  $(INSTALL_DATA) $(srcdir)/$$p $(pkgdatadir)/$$p; \
	done

uninstall-pkgdataDATA:
	for p in $(pkgdata_DATA); do		\
	  rm -f $(pkgdatadir)/$$p;		\
	done

ID: $(HEADERS) $(SOURCES)
	here=`pwd` && cd $(srcdir) && mkid -f $$here/ID $(SOURCES) $(HEADERS)

tags: TAGS

TAGS:
	here=`pwd` && cd $(srcdir) && etags $(ETAGS_ARGS) $(SOURCES) $(HEADERS) -o $$here/TAGS

mostlyclean-tags:

clean-tags:

distclean-tags:
	rm -f TAGS ID

maintainer-clean-tags:

distdir = $(PACKAGE)-$(VERSION)
dist: $(DEP_DISTFILES)
	@if sed 15q NEWS | grep -e "$(VERSION)" > /dev/null; then :; else \
	  echo "NEWS not updated; not releasing" 1>&2; \
	  exit 1;				\
	fi
	rm -rf $(distdir)
	mkdir $(distdir)
	chmod 777 $(distdir)
	distdir=`cd $(distdir) && pwd` \
	  && cd $(srcdir) \
	  && automake --include-deps --output-dir=$$distdir --strictness=gnits
	@for file in `cd $(srcdir) && echo $(DISTFILES)`; do \
	  test -f $(distdir)/$$file \
	  || ln $(srcdir)/$$file $(distdir)/$$file 2> /dev/null \
	  || cp -p $(srcdir)/$$file $(distdir)/$$file; \
	done
	@for dir in $(DIST_SUBDIRS); do		\
	  echo copying directory $$dir;		\
	  tar chf - $$dir | (cd $(distdir) && tar xBpf -); \
	done
	chmod -R a+r $(distdir)
	tar chozf $(distdir).tar.gz $(distdir)
	rm -rf $(distdir)
all: info $(SCRIPTS) $(DATA)

info: $(INFO_DEPS)

dvi: $(DVIS)

check: all

installcheck:

install-exec: install-binSCRIPTS

install-data: install-info install-pkgdataDATA

install: install-exec install-data
	@:

uninstall: uninstall-binSCRIPTS uninstall-info uninstall-pkgdataDATA

installdirs:
	$(top_srcdir)/mkinstalldirs  $(bindir) $(infodir) $(pkgdatadir)


mostlyclean-generic:
	test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:
	test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	rm -f Makefile $(DISTCLEANFILES)
	rm -f config.cache config.log $(CONFIG_HEADER) stamp-h

maintainer-clean-generic:
	test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
	test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
mostlyclean:  mostlyclean-binSCRIPTS mostlyclean-vti mostlyclean-info \
mostlyclean-tags mostlyclean-generic

clean:  clean-binSCRIPTS clean-vti clean-info clean-tags clean-generic \
mostlyclean 

distclean:  distclean-binSCRIPTS distclean-vti distclean-info \
distclean-tags distclean-generic clean 
	rm -f config.status

maintainer-clean:  maintainer-clean-binSCRIPTS maintainer-clean-vti \
maintainer-clean-info maintainer-clean-tags maintainer-clean-generic \
distclean 
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."
	rm -f config.status

.PHONY: default mostlyclean-binSCRIPTS distclean-binSCRIPTS \
clean-binSCRIPTS maintainer-clean-binSCRIPTS uninstall-binSCRIPTS \
mostlyclean-vti distclean-vti clean-vti maintainer-clean-vti \
install-info uninstall-info mostlyclean-info distclean-info clean-info \
maintainer-clean-info uninstall-pkgdataDATA tags mostlyclean-tags \
distclean-tags clean-tags maintainer-clean-tags dist all info dvi check \
installcheck install-exec install-data install uninstall installdirs \
mostlyclean-generic distclean-generic clean-generic \
maintainer-clean-generic clean mostlyclean distclean maintainer-clean


# Some simple checks:
# * syntax check with perl4 and perl5.
# * make sure the scripts don't use 'true'
# * expect no instances of '${...}'
# These are only really guaranteed to work on my machine.
maintainer-check: automake
	@PERL@ -c -w automake
	@if grep '^[^#].*true' $(srcdir)/[a-z]*.am; then \
	  echo "can't use 'true' in GNU Makefile" 1>&2; \
	  exit 1;				\
	else :; fi
	@if test `fgrep '$${' $(srcdir)/[a-z]*.am | wc -l` -ne 0; then \
	  echo "found too many uses of '\$${'" 1>&2; \
	  exit 1;				\
	fi
	if $(SHELL) -c 'perl4.036 -v' >/dev/null 2>&1; then \
	  perl4.036 -c -w automake; \
	else :; fi

automake: automake.in
	CONFIG_FILES=$@ CONFIG_HEADERS= ./config.status

# Tag before making distribution.  Also, don't make a distribution if
# checks fail.  Also, make sure the NEWS file is up-to-date.
cvs-dist: maintainer-check
	@if sed 1q NEWS | grep -e "$(VERSION)" > /dev/null; then :; else \
	  echo "NEWS not updated; not releasing" 1>&2; \
	  exit 1;				\
	fi
	cvs tag `echo "Release-$(VERSION)" | sed 's/\./-/g'`
	$(MAKE) dist
.SUFFIXES:
.SUFFIXES: .texi .info .dvi

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
